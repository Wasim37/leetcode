class Solution {
public:
    int maxProductPath(vector<vector<int>>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        vector<vector<long long>>dp1(row,vector<long long>(col));
        vector<vector<long long>>dp2(row,vector<long long>(col));
        dp1[0][0] = grid[0][0];
        dp2[0][0] = grid[0][0];
        for(int i = 1 ; i < row; i++){
            dp1[i][0] =dp1[i-1][0] * grid[i][0];
            dp2[i][0] =dp2[i-1][0] * grid[i][0];
        }
        for(int i = 1 ; i < col; i++){
            dp1[0][i] =dp1[0][i-1] * grid[0][i];
            dp2[0][i] =dp2[0][i-1] * grid[0][i];

        }
        for(int i = 1; i < grid.size();i++){
            for(int j = 1; j < grid[0].size();j++){
                dp1[i][j]=max({dp1[i-1][j]*grid[i][j], dp1[i][j-1]*grid[i][j],dp2[i-1][j]*grid[i][j], dp2[i][j-1]*grid[i][j]});
                dp2[i][j]=min({dp1[i-1][j]*grid[i][j], dp1[i][j-1]*grid[i][j],dp2[i-1][j]*grid[i][j], dp2[i][j-1]*grid[i][j]});
            }
        }
        if(dp1[row-1][col-1] < 0) return -1;
        else return dp1[row-1][col-1]%1000000007;
    }
};